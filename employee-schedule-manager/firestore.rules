rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Employees collection
    match /employees/{employeeId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.token.role == 'admin'
        && request.resource.data.email is string
        && request.resource.data.firstName is string
        && request.resource.data.lastName is string
        && request.resource.data.username is string
        && request.resource.data.position is string
        && request.resource.data.color is string
        && request.resource.data.role == 'employee';
      allow delete: if request.auth.token.role == 'admin';
    }

    // Shifts collection
    match /shifts/{shiftId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'admin';
    }

    // Requests (time off, etc.)
    match /requests/{requestId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.token.role != 'admin';
      allow update, delete: if request.auth.token.role == 'admin';
    }

    // Shift coverage requests
    match /shiftCoverageRequests/{requestId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.token.role != 'admin';
      allow update, delete: if request.auth.token.role == 'admin';
    }

    // Announcements
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'admin';
    }

    // Users (profile info)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
